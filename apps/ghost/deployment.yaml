apiVersion: apps/v1
kind: Deployment
metadata:
  name: ghost
  namespace: ghost
  labels:
    app: ghost
    app.kubernetes.io/name: ghost
    app.kubernetes.io/instance: ghost
    app.kubernetes.io/version: "5.8"
    app.kubernetes.io/component: ghost
    app.kubernetes.io/part-of: ghost

spec:
  replicas: 1
  selector:
    matchLabels:
      app: ghost
  template:
    metadata:
      namespace: ghost
      labels:
        app: ghost
    spec:
      automountServiceAccountToken: false # Disable automounting of service account token
      volumes:
        - name: ghost-content
          persistentVolumeClaim:
            claimName: ghost-content-pvc

        - name: ghost-config-prod
          secret:
            secretName: ghost-config-prod
            defaultMode: 420

        - name: tmp
          emptyDir:
            sizeLimit: 64Mi

      initContainers:
        - name: permission-fix
          image: docker.io/busybox:stable-musl
          env:
            - name: GHOST_INSTALL
              value: /home/nonroot/app/ghost
            - name: GHOST_CONTENT
              value: /home/nonroot/app/ghost/content
            - name: NODE_ENV
              value: production
          securityContext:
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
          resources:
            limits:
              cpu: 900m
              memory: 1000Mi
            requests:
              cpu: 100m
              memory: 128Mi
          command:
            - /bin/sh
            - "-c"
            - |
              set -e

              export DIRS='files logs apps themes data public settings images media'
              echo 'Check if base dirs exists, if not, create them'
              echo "Directories to check: $DIRS"
              for dir in $DIRS; do
                if [ ! -d $GHOST_CONTENT/$dir ]; then
                  echo "Creating $GHOST_CONTENT/$dir directory"
                  mkdir -pv $GHOST_CONTENT/$dir && chown -Rfv 65532:65532 $GHOST_CONTENT/$dir || echo "Error creating $GHOST_CONTENT/$dir directory"
                fi
              done

              echo "Changing ownership of $GHOST_CONTENT/themes directory"
              chown -Rf 65532:65532 $GHOST_CONTENT/themes && echo "chown ok on thenmes" || echo "Error changing ownership of $GHOST_CONTENT/themes directory"

              echo "Changing ownership of $GHOST_CONTENT/public directory"
              chown -Rf 65532:65532 $GHOST_CONTENT/public && chown ok in public|| echo "Error changing ownership of $GHOST_CONTENT public directory"
              exit 0

          volumeMounts:
            - name: ghost-content
              mountPath: /var/lib/ghost/content
              readOnly: false

      containers:
        - name: ghost
          image: ghcr.io/sredevopsorg/ghost-on-kubernetes:main
          imagePullPolicy: Always
          ports:
            - name: ghost
              containerPort: 2368
              protocol: TCP

          # You should uncomment the following lines in production. Change the values according to your environment.

          readinessProbe:
            httpGet:
              path: /ghost/api/v4/admin/site/
              port: ghk8s
              httpHeaders:
                - name: X-Forwarded-Proto
                  value: https
                - name: Host
                  value: rookian.dev
            periodSeconds: 10
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
            initialDelaySeconds: 10

          livenessProbe:
            httpGet:
              path: /ghost/api/v4/admin/site/
              port: ghk8s
              httpHeaders:
                - name: X-Forwarded-Proto
                  value: https
                - name: Host
                  value: rookian.dev
            periodSeconds: 3600
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 1
            initialDelaySeconds: 60

          env:
            - name: NODE_ENV
              value: production
          resources:
            limits:
              cpu: 800m
              memory: 800Mi
            requests:
              cpu: 100m
              memory: 200Mi

          volumeMounts:
            - name: ghost-content
              mountPath: /home/nonroot/app/ghost/content
              readOnly: false
            - name: ghost-config-prod
              readOnly: true
              mountPath: /home/nonroot/app/ghost/config.production.json
              subPath: config.production.json
            - name: tmp # This is the temporary volume mount to allow loading themes
              mountPath: /tmp
              readOnly: false
          securityContext:
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 65532

      restartPolicy: Always
      terminationGracePeriodSeconds: 15
      dnsPolicy: ClusterFirst
      # Optional: Uncomment the following to specify node selectors
      # affinity:
      #   nodeAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       nodeSelectorTerms:
      #         - matchExpressions:
      #             - key: static
      #               operator: In
      #               values:
      #                 - "true"

      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 3
  revisionHistoryLimit: 3
  progressDeadlineSeconds: 600
